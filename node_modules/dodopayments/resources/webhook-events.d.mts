import { APIResource } from "../core/resource.mjs";
import * as DisputesAPI from "./disputes.mjs";
import * as LicenseKeysAPI from "./license-keys.mjs";
import * as PaymentsAPI from "./payments.mjs";
import * as RefundsAPI from "./refunds.mjs";
import * as SubscriptionsAPI from "./subscriptions.mjs";
export declare class WebhookEvents extends APIResource {
}
/**
 * Event types for Dodo events
 */
export type WebhookEventType = 'payment.succeeded' | 'payment.failed' | 'payment.processing' | 'payment.cancelled' | 'refund.succeeded' | 'refund.failed' | 'dispute.opened' | 'dispute.expired' | 'dispute.accepted' | 'dispute.cancelled' | 'dispute.challenged' | 'dispute.won' | 'dispute.lost' | 'subscription.active' | 'subscription.renewed' | 'subscription.on_hold' | 'subscription.cancelled' | 'subscription.failed' | 'subscription.expired' | 'subscription.plan_changed' | 'license_key.created';
export interface WebhookPayload {
    business_id: string;
    /**
     * The latest data at the time of delivery attempt
     */
    data: WebhookPayload.Payment | WebhookPayload.Subscription | WebhookPayload.Refund | WebhookPayload.Dispute | WebhookPayload.LicenseKey;
    /**
     * The timestamp of when the event occurred (not necessarily the same of when it
     * was delivered)
     */
    timestamp: string;
    /**
     * Event types for Dodo events
     */
    type: WebhookEventType;
}
export declare namespace WebhookPayload {
    interface Payment extends PaymentsAPI.Payment {
        payload_type: 'Payment';
    }
    /**
     * Response struct representing subscription details
     */
    interface Subscription extends SubscriptionsAPI.Subscription {
        payload_type: 'Subscription';
    }
    interface Refund extends RefundsAPI.Refund {
        payload_type: 'Refund';
    }
    interface Dispute extends DisputesAPI.GetDispute {
        payload_type: 'Dispute';
    }
    interface LicenseKey extends LicenseKeysAPI.LicenseKey {
        payload_type: 'LicenseKey';
    }
}
export declare namespace WebhookEvents {
    export { type WebhookEventType as WebhookEventType, type WebhookPayload as WebhookPayload };
}
//# sourceMappingURL=webhook-events.d.mts.map