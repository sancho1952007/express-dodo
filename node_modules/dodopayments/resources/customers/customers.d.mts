import { APIResource } from "../../core/resource.mjs";
import * as CustomerPortalAPI from "./customer-portal.mjs";
import { CustomerPortal, CustomerPortalCreateParams } from "./customer-portal.mjs";
import * as WalletsAPI from "./wallets/wallets.mjs";
import { CustomerWallet, WalletListResponse, Wallets } from "./wallets/wallets.mjs";
import { APIPromise } from "../../core/api-promise.mjs";
import { DefaultPageNumberPagination, type DefaultPageNumberPaginationParams, PagePromise } from "../../core/pagination.mjs";
import { RequestOptions } from "../../internal/request-options.mjs";
export declare class Customers extends APIResource {
    customerPortal: CustomerPortalAPI.CustomerPortal;
    wallets: WalletsAPI.Wallets;
    create(body: CustomerCreateParams, options?: RequestOptions): APIPromise<Customer>;
    retrieve(customerID: string, options?: RequestOptions): APIPromise<Customer>;
    update(customerID: string, body: CustomerUpdateParams, options?: RequestOptions): APIPromise<Customer>;
    list(query?: CustomerListParams | null | undefined, options?: RequestOptions): PagePromise<CustomersDefaultPageNumberPagination, Customer>;
}
export type CustomersDefaultPageNumberPagination = DefaultPageNumberPagination<Customer>;
export interface Customer {
    business_id: string;
    created_at: string;
    customer_id: string;
    email: string;
    name: string;
    phone_number?: string | null;
}
export interface CustomerPortalSession {
    link: string;
}
export interface CustomerCreateParams {
    email: string;
    name: string;
    phone_number?: string | null;
}
export interface CustomerUpdateParams {
    name?: string | null;
    phone_number?: string | null;
}
export interface CustomerListParams extends DefaultPageNumberPaginationParams {
    /**
     * Filter by customer email
     */
    email?: string;
}
export declare namespace Customers {
    export { type Customer as Customer, type CustomerPortalSession as CustomerPortalSession, type CustomersDefaultPageNumberPagination as CustomersDefaultPageNumberPagination, type CustomerCreateParams as CustomerCreateParams, type CustomerUpdateParams as CustomerUpdateParams, type CustomerListParams as CustomerListParams, };
    export { CustomerPortal as CustomerPortal, type CustomerPortalCreateParams as CustomerPortalCreateParams };
    export { Wallets as Wallets, type CustomerWallet as CustomerWallet, type WalletListResponse as WalletListResponse, };
}
//# sourceMappingURL=customers.d.mts.map